{"name": "test_vendor_add_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCase.test_vendor_add_product.VendorAddProduct testMethod=test_vendor_add_product>\n\n    def test_vendor_add_product(self):\n        vendor_feature = VendorFeature(self.driver)\n        vendor_feature.login_vendor()\n>       vendor_feature.add_product()\n\nTestCase/test_vendor_add_product.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/vendor_feature_page.py:56: in add_product\n    self.click(self.locator.product_category)\npages/base_page.py:279: in click\n    self.find_element(*locator).click()\npages/base_page.py:60: in find_element\n    return self.wait_till_visibility_of_element_located(30, *locator)\npages/base_page.py:577: in wait_till_visibility_of_element_located\n    element = wait.until(ec.visibility_of_element_located(*locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"433479b434af3206ec09768574ebbb36\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fbc6ad1ebe0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "a771deee-3fae-494c-9ec6-7a986279c40f-attachment.txt", "type": "text/plain"}], "start": 1635746135605, "stop": 1635746195165, "uuid": "c52372d1-8d46-4064-80a5-76ecd29f02ff", "historyId": "1694fda5f1e9bd4a2cf0723967a804c4", "testCaseId": "8a827ef9e43327fac4cd0a654fcee6c0", "fullName": "TestCase.test_vendor_add_product.VendorAddProduct#test_vendor_add_product", "labels": [{"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_vendor_add_product"}, {"name": "subSuite", "value": "VendorAddProduct"}, {"name": "host", "value": "sh"}, {"name": "thread", "value": "9732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_vendor_add_product"}]}